# This is a basic workflow to help you get started with Actions 

name: Build and Package Windows Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
        matrix:
            configuration: [Release]
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    env:
        Solution_Name: Amadon.sln                 # Solution name
        Wap_Project_Directory: Releases           # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
        Wap_Project_Path: Amadon/Amadon/Amadon.csproj    # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  build-and-package:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Updated to use Node.js 20

    - name: Set up .NET
      uses: actions/setup-dotnet@v4 # Updated to use Node.js 20
      with:
        dotnet-version: '6.0.x' # Specify the required .NET SDK version

    - name: Restore dependencies
      run: dotnet restore $env:Wap_Project_Path # Specify the path to your solution file

    - name: Build solution
      run: dotnet build $env:Wap_Project_Path --configuration Release # Specify the path to your solution file

    - name: Publish package
      run: dotnet publish $env:Wap_Project_Path --configuration Release --output ./publish # Specify the path to your solution file

    - name: Archive package
      uses: actions/upload-artifact@v3
      with:
        name: app-package
        path: ./publish
